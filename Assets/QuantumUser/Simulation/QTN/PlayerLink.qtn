asset CharacterSpec;

input {
    FPVector2 Direction;
    FPVector2 MousePosition;
    button Dash;
    button Attack;
    button SwitchWeapon;
    button ShowTrajectory;
    int SelectedUpgradeIndex;
}

component PlayerLink {
    PlayerRef Player;
}

component CharacterStats {
    AssetRef<CharacterSpec> Spec;
    FP CurrentHealth;
    bool IsRegenerating;
    bool SwitchWeaponPressedLastFrame;
    FP DashCooldownRemaining;

    FP MaxAmmoMultiplier;
    FP ReloadTimeMultiplier;
    FP AttackCooldownMultiplier;
    FP MoveSpeedMultiplier;
    FP DamageMultiplier;
    FP MaxHealthMultiplier;
    FP BulletSpeedMultiplier;
    FP BounceDamageIncreaseMultiplier;
    int AdditionalBulletBounces;
}

component WeaponInventory {
    list<WeaponInstance> OwnedWeapons;
    
    WeaponInstance MainHandWeapon;
    WeaponInstance OffHandWeapon;
    
    bool IsMainHandActive;
}

component Dashing {
    int RemainingFrames;
    FPVector2 Direction;
}

signal CharacterShoot(EntityRef owner);
signal SwitchWeapon(entity_ref entity, int weaponIndex);
signal ReloadWeapon(entity_ref entity);